---
name: Release

on:
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: 'maven'

      - name: Configure Git user
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Get the version
        run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | grep -v '\[.*' | awk -F- '{print ""$1""}')" >> "$GITHUB_ENV"
          echo "NEXT_DEV_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | grep -v '\[.*' | awk -F- '{print ""$1+0.1"-SNAPSHOT"}')" >> "$GITHUB_ENV"

      - name: Release version bump
        run: |
          mvn -V -B -e versions:set -DnewVersion=${{ env.RELEASE_VERSION }} -DprocessAllModules -DgenerateBackupPoms=false
          git commit -am "set release version"
          git push origin develop

      - name: Merge develop into main
        run: |
          git checkout main
          git pull origin main
          git merge develop --no-ff -m "Merge develop for release"
          git tag -a ${{ env.RELEASE_VERSION }} -m "${{ env.RELEASE_VERSION }}"
          git push origin main
          git push origin ${{ env.RELEASE_VERSION }}

      - name: Next dev version
        run: |
          mvn -V -B -e versions:set -DnewVersion=${{ env.NEXT_DEV_VERSION }} -DprocessAllModules -DgenerateBackupPoms=false
          git commit -am "set next dev version"
          git push origin develop

      - name: Switch to the release tag
        run: git checkout ${{ env.RELEASE_VERSION }}

      - name: Build Auditing Middleware
        run: mvn clean package

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{ env.RELEASE_VERSION }}
          tag_name: ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false
          files: |
            ./target/workflows-${{ env.RELEASE_VERSION }}.jar

